# ONE
http.get./postgresql/post/{id}:
  summary: Fetch Post
  description: Fetch Post from database
  fn: com.biz.postgresql.post.one
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    content:
      application/json:
        schema:
          type: object

# CREATE
http.post./postgresql/post:
  summary: Create a new Post
  description: Create Post from database
  fn: com.biz.postgresql.post.create
  body:
    content:
      application/json:
        schema:
          $ref: '#/definitions/postgresql/Post'
  responses:
    content:
      application/json:
        schema:
          type: object

# UPDATE
http.put./postgresql/post/{id}:
  summary: Update a Post
  description: Update Post from database
  fn: com.biz.postgresql.post.update
  body:
    content:
      application/json:
        schema:
          $ref: '#/definitions/postgresql/Post'
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    content:
      application/json:
        schema:
          type: object

# DELETE
http.delete./postgresql/post/{id}:
  summary: Delete a Post
  description: Delete Post from database
  fn: com.biz.postgresql.post.delete
  params:
    - name: id
      in: path
      required: true
      schema:
        type: string
  responses:
    content:
      application/json:
        schema:
          type: object

# SEARCH
http.post./postgresql/post/search:
  summary: Fetch multiple Post
  description: Fetch multiple Post from database
  fn: com.biz.postgresql.post.search
  body:
    content:
      application/json:
        schema:
          type: object
  responses:
    content:
      application/json:
        schema:
          type: array

